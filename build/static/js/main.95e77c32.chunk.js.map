{"version":3,"sources":["components/DataStatus.js","utils/constants.js","utils/animations.js","components/People.js","components/Trajectories.js","components/Stats.js","components/Main.js","App.js","index.js"],"names":["Wrapper","styled","div","Indicator","span","hasData","DataStatus","data","length","style","marginRight","COLORS","blink","keyframes","fadeFromLeft","PeopleWrapper","PeopleButton","button","color","index","Separator","hr","People","onReset","onClick","className","map","person","id","LineChart","forwardRef","ref","dataset","datasets","points","sort","a","b","time","orderByTime","path","label","fill","backgroundColor","borderColor","pointStyle","pointRadius","options","lineTension","plugins","tooltip","callbacks","context","console","log","raw","formattedValue","scales","x","type","Trajectories","innerRef","StatsWrapper","getMedian","values","half","Math","floor","Stats","selectedId","isDisabled","fontWeight","timeValues","max","min","getTrajectoryLength","xValues","yValues","forEach","y","medianSpeed","medianX","medianY","parseFloat","toPrecision","getMedianSpeed","stops","reduce","sum","acc","getStopNumber","MainBase","Header","Title","h1","Logo","FiEye","Content","Main","useState","setselectedId","lineChartRef","useRef","_person","idx","current","hide","show","importData","App","setData","useEffect","then","default","rest","Object","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95e77c32.chunk.js","sourcesContent":["import { FiUsers } from \"react-icons/fi\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n\n  border-radius: 6px;\n  background: rgba(0, 0, 0, 0.4);\n  padding: 1em;\n  font-weight: 300;\n`;\n\nconst Indicator = styled.span`\n  font-weight: 600;\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\n  color: ${({ hasData }) => (hasData ? \"#2ecc71\" : \"#e74c3c\")};\n  margin-right: 10px;\n  padding-right: 10px;\n`;\n\nconst DataStatus = ({ data }) => (\n  <Wrapper>\n    <Indicator hasData={data.length}>\n      <FiUsers style={{ marginRight: \"4px\" }} />\n      {data.length}\n    </Indicator>\n    <span>DataSet {data.length ? \"loaded\" : \"empty\"}</span>\n  </Wrapper>\n);\n\nexport default DataStatus;\n","export const COLORS = [\"#00b894\", \"#74b9ff\", \"#fdcb6e\", \"#6c5ce7\", \"#ff7675\"];\n","import { keyframes } from \"styled-components\";\n\nexport const blink = keyframes`\n  0% {}\n  1% { transform: scaleY(1); }\n  3% { transform: scaleY(0.2); }\n  5% { transform: scaleY(1); }\n  6% { transform: scaleY(1); }\n  8% { transform: scaleY(0.2); }\n  10% { transform: scaleY(1); }\n`;\n\nexport const fadeFromLeft = keyframes`\n  from { \n    opacity: 0;\n    transform: translateX(-10px) \n  }\n  to {\n    opacity: 1;\n    transform: translateX(0) \n  }\n`;\n","import styled from \"styled-components\";\nimport { FiUser, FiUsers } from \"react-icons/fi\";\nimport { COLORS } from \"../utils/constants\";\nimport { fadeFromLeft } from \"../utils/animations\";\n\nconst Wrapper = styled.div`\n  max-width: 10%;\n  flex: 1;\n`;\n\nconst PeopleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PeopleButton = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n\n  pborder: 0;\n  padding: 0;\n  border: 0;\n  background: ${({ color }) => color};\n  cursor: pointer;\n  padding: 0.5em;\n  border-radius: 4px;\n  color: ${({ color }) => (color ? \"snow\" : \"#34495e\")};\n\n  font-size: 14px;\n  font-weight: 600;\n  vertical-align: middle;\n  transition: all 0.1s ease;\n  animation: ${fadeFromLeft} 0.5s ease-in-out\n    ${({ index }) => (index ? index / 10 : 0)}s backwards;\n\n  & > span {\n    transition: all 0.3s ease;\n    margin: 0 auto;\n  }\n\n  :not(:first-child) {\n    margin-bottom: 6px;\n  }\n\n  &:hover {\n    transform: scaleX(1.03);\n  }\n  &:active {\n    transform: scale(0.98);\n  }\n`;\n\nconst Separator = styled.hr`\n  width: 40%;\n  margin: 8px auto;\n  opacity: 0.2;\n`;\n\nconst People = ({ data, onReset, onClick }) => {\n  return (\n    <Wrapper>\n      <h2>\n        <FiUsers />\n        <span className=\"mobile-hide\">People</span>\n      </h2>\n\n      <PeopleWrapper>\n        <PeopleButton onClick={onReset}>All</PeopleButton>\n        <Separator />\n        {data.map((person, index) => (\n          <PeopleButton\n            key={index}\n            index={index}\n            onClick={() => onClick(index)}\n            color={COLORS[index]}\n          >\n            <FiUser /> <span>{person.id}</span>\n          </PeopleButton>\n        ))}\n      </PeopleWrapper>\n    </Wrapper>\n  );\n};\n\nexport default People;\n","import { forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport { FiGitBranch } from \"react-icons/fi\";\nimport { COLORS } from \"../utils/constants\";\nimport { Line } from \"react-chartjs-2\";\n\nconst Wrapper = styled.div`\n  max-width: 90%;\n  flex: 1;\n`;\n\nconst orderByTime = (data) =>\n  data.map(({ id, points }) => {\n    const sortedPoints = points.sort((a, b) => a.time - b.time);\n    return { id, points: sortedPoints };\n  });\n\nconst LineChart = forwardRef(({ data, onClick }, ref) => {\n  const orderedData = orderByTime(data);\n\n  const dataset = {\n    datasets: orderedData.map((path, index) => ({\n      label: `Position of ${path.id}`,\n      data: path.points,\n      fill: false,\n      backgroundColor: COLORS[index],\n      borderColor: COLORS[index],\n      pointStyle: \"circle\",\n      pointRadius: 6,\n    })),\n  };\n\n  const options = {\n    lineTension: 0.5,\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const label = context.dataset.label || \"\";\n\n            console.log(context);\n\n            const newLabel = `${label} at T=${context.raw.time}: ${context.formattedValue}`;\n            return newLabel;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        type: \"linear\",\n      },\n    },\n  };\n\n  return <Line ref={ref} data={dataset} options={options} onClick={onClick} />;\n});\n\nconst Trajectories = ({ data, innerRef }) => (\n  <Wrapper>\n    <h2>\n      <FiGitBranch />\n      <span className=\"mobile-hide\">Trajectories</span>\n    </h2>\n    <LineChart ref={innerRef} data={data} />\n  </Wrapper>\n);\n\nexport default Trajectories;\n","import styled from \"styled-components\";\nimport { FiActivity, FiWatch, FiMapPin, FiChevronsRight } from \"react-icons/fi\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n\nconst StatsWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 1em;\n\n  & > span {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-size: 1em;\n  }\n\n  & svg {\n    font-size: 40px;\n    margin: 10px;\n  }\n`;\n\n// Get the edian value from an array\nconst getMedian = (values) => {\n  values.sort((a, b) => a - b);\n  const half = Math.floor(values.length / 2);\n  if (values.length % 2) return values[half];\n  return (values[half - 1] + values[half]) / 2.0;\n};\n\nconst Stats = ({ data, selectedId }) => {\n  const isDisabled = selectedId === null;\n\n  const getTrajectoryLength = () => {\n    const timeValues = data[selectedId]?.points.map(({ time }) => time);\n    const diff = Math.max(...timeValues) - Math.min(...timeValues);\n    return diff;\n  };\n\n  const getMedianSpeed = () => {\n    let timeValues = [];\n    let xValues = [];\n    let yValues = [];\n\n    data[selectedId]?.points.forEach(({ time, x, y }) => {\n      timeValues = [...timeValues, time];\n      xValues = [...xValues, x];\n      yValues = [...yValues, y];\n    });\n\n    const medianSpeed = getMedian(timeValues) / timeValues.length;\n    const medianX = getMedian(xValues) / xValues.length;\n    const medianY = getMedian(yValues) / yValues.length;\n\n    return parseFloat(medianX + medianY / medianSpeed).toPrecision(4);\n  };\n\n  const getStopNumber = () => {\n    let stops = 0;\n\n    data[selectedId]?.points.reduce((sum, acc) => {\n      if (acc.x === sum?.x || acc.y === sum?.y) stops++;\n      return sum;\n    });\n\n    return stops;\n  };\n\n  return (\n    <Wrapper>\n      <h2>\n        <FiActivity />\n        <span className=\"mobile-hide\">Did you know ?</span>\n      </h2>\n      {isDisabled ? (\n        <span style={{ fontWeight: 300 }}>\n          Select a profile to know more about him\n        </span>\n      ) : (\n        <>\n          <StatsWrapper>\n            <span>\n              <FiWatch />\n              Total trajectory length: {getTrajectoryLength()} s\n            </span>\n            <span>\n              <FiChevronsRight />\n              Median speed: {getMedianSpeed()} m/s\n            </span>\n            <span>\n              <FiMapPin />\n              Number of stops: {getStopNumber()}\n            </span>\n          </StatsWrapper>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Stats;\n","import { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FiEye } from \"react-icons/fi\";\nimport DataStatus from \"./DataStatus\";\nimport People from \"./People\";\nimport Trajectories from \"./Trajectories\";\nimport Stats from \"./Stats\";\nimport { blink } from \"../utils/animations\";\n\nconst MainBase = styled.div`\n  padding: 2em;\n  color: snow;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Title = styled.h1`\n  display: flex;\n  align-items: center;\n`;\n\nconst Logo = styled(FiEye)`\n  margin-right: 10px;\n  animation: ${blink} 5s infinite ease-in-out 2s;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n\n    border-radius: 6px;\n    background: rgba(0, 0, 0, 0.4);\n    padding: 1em;\n  }\n\n  & h2 {\n    display: flex;\n    align-items: center;\n    margin: 0;\n    margin-bottom: 1em;\n\n    & > svg {\n      margin-right: 6px;\n    }\n  }\n`;\n\nconst Main = ({ data = [] }) => {\n  const [selectedId, setselectedId] = useState(null);\n  const lineChartRef = useRef();\n\n  const resetTrajectories = () => {\n    setselectedId(null);\n\n    data.forEach((_person, idx) => lineChartRef.current.show(idx));\n  };\n\n  const showTrajectory = (index) => {\n    setselectedId(index);\n\n    data.forEach((_person, idx) => {\n      idx !== index\n        ? lineChartRef.current.hide(idx)\n        : lineChartRef.current.show(index);\n    });\n  };\n\n  return (\n    <MainBase>\n      <Header>\n        <Title>\n          <Logo />\n          <span>Lil Brother</span>\n        </Title>\n        <DataStatus data={data} />\n      </Header>\n\n      <Content>\n        <People\n          data={data}\n          onClick={showTrajectory}\n          onReset={resetTrajectories}\n        />\n\n        <Trajectories innerRef={lineChartRef} data={data} />\n\n        <Stats data={data} selectedId={selectedId} />\n      </Content>\n    </MainBase>\n  );\n};\n\nexport default Main;\n","import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Main from \"./components/Main\";\nimport Spinner from \"./components/Main\";\nimport \"./App.css\";\n\nconst importData = async () => import(\"./data/trajectoires.json\");\n\nconst Wrapper = styled.div`\n  // width: 100vw;\n  // height: 100vh;\n  background: #282c34;\n`;\n\nfunction App() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    // Setting the data state asynchronously\n    // in case of huge dataset import\n    // we'll be able to display a loader\n    importData().then(\n      ({ default: def, ...rest }) => {\n        // const orderedByTime = Object.values(rest).sort((a, b) => { return a.key > b.key; });\n        setData(Object.values(rest));\n        // setData(orderedByTime);\n      }\n      // ({ default: def, ...rest }) => setData(Object.values(rest))\n      // ({ default: def, ...rest }) => setTimeout(() => setData(rest), 1000)\n    );\n  }, []);\n\n  return <Wrapper>{!data ? <Spinner /> : <Main data={data} />}</Wrapper>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}