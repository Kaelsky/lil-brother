{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/mickaelchimansky/Desktop/lil-brother/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{forwardRef}from\"react\";import styled from\"styled-components\";import{FiGitBranch}from\"react-icons/fi\";import{COLORS}from\"../utils/constants\";import{Line}from\"react-chartjs-2\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  max-width: 90%;\\n  flex: 1;\\n\"])));var orderByTime=function orderByTime(data){return data.map(function(_ref){var id=_ref.id,points=_ref.points;var sortedPoints=points.sort(function(a,b){return a.time-b.time;});return{id:id,points:sortedPoints};});};var LineChart=/*#__PURE__*/forwardRef(function(_ref2,ref){var data=_ref2.data,onClick=_ref2.onClick;var orderedData=orderByTime(data);var dataset={datasets:orderedData.map(function(path,index){return{label:\"Position of \".concat(path.id),data:path.points,fill:false,backgroundColor:COLORS[index],borderColor:COLORS[index],pointStyle:\"circle\",pointRadius:6};})};var options={lineTension:0.5,plugins:{tooltip:{callbacks:{label:function label(context){var label=context.dataset.label||\"\";console.log(context);var newLabel=\"\".concat(label,\" at T=\").concat(context.raw.time,\": \").concat(context.formattedValue);return newLabel;}}}},scales:{x:{type:\"linear\"}}};return/*#__PURE__*/_jsx(Line,{ref:ref,data:dataset,options:options,onClick:onClick});});var Trajectories=function Trajectories(_ref3){var data=_ref3.data,innerRef=_ref3.innerRef;return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(FiGitBranch,{}),/*#__PURE__*/_jsx(\"span\",{className:\"mobile-hide\",children:\"Trajectories\"})]}),/*#__PURE__*/_jsx(LineChart,{ref:innerRef,data:data})]});};export default Trajectories;","map":{"version":3,"sources":["/Users/mickaelchimansky/Desktop/lil-brother/src/components/Trajectories.js"],"names":["forwardRef","styled","FiGitBranch","COLORS","Line","Wrapper","div","orderByTime","data","map","id","points","sortedPoints","sort","a","b","time","LineChart","ref","onClick","orderedData","dataset","datasets","path","index","label","fill","backgroundColor","borderColor","pointStyle","pointRadius","options","lineTension","plugins","tooltip","callbacks","context","console","log","newLabel","raw","formattedValue","scales","x","type","Trajectories","innerRef"],"mappings":"sMAAA,OAASA,UAAT,KAA2B,OAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,WAAT,KAA4B,gBAA5B,CACA,OAASC,MAAT,KAAuB,oBAAvB,CACA,OAASC,IAAT,KAAqB,iBAArB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAGJ,MAAM,CAACK,GAAV,kGAAb,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,QAClBA,CAAAA,IAAI,CAACC,GAAL,CAAS,cAAoB,IAAjBC,CAAAA,EAAiB,MAAjBA,EAAiB,CAAbC,MAAa,MAAbA,MAAa,CAC3B,GAAMC,CAAAA,YAAY,CAAGD,MAAM,CAACE,IAAP,CAAY,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACE,IAAF,CAASD,CAAC,CAACC,IAArB,EAAZ,CAArB,CACA,MAAO,CAAEN,EAAE,CAAFA,EAAF,CAAMC,MAAM,CAAEC,YAAd,CAAP,CACD,CAHD,CADkB,EAApB,CAMA,GAAMK,CAAAA,SAAS,cAAGjB,UAAU,CAAC,eAAoBkB,GAApB,CAA4B,IAAzBV,CAAAA,IAAyB,OAAzBA,IAAyB,CAAnBW,OAAmB,OAAnBA,OAAmB,CACvD,GAAMC,CAAAA,WAAW,CAAGb,WAAW,CAACC,IAAD,CAA/B,CAEA,GAAMa,CAAAA,OAAO,CAAG,CACdC,QAAQ,CAAEF,WAAW,CAACX,GAAZ,CAAgB,SAACc,IAAD,CAAOC,KAAP,QAAkB,CAC1CC,KAAK,uBAAiBF,IAAI,CAACb,EAAtB,CADqC,CAE1CF,IAAI,CAAEe,IAAI,CAACZ,MAF+B,CAG1Ce,IAAI,CAAE,KAHoC,CAI1CC,eAAe,CAAExB,MAAM,CAACqB,KAAD,CAJmB,CAK1CI,WAAW,CAAEzB,MAAM,CAACqB,KAAD,CALuB,CAM1CK,UAAU,CAAE,QAN8B,CAO1CC,WAAW,CAAE,CAP6B,CAAlB,EAAhB,CADI,CAAhB,CAYA,GAAMC,CAAAA,OAAO,CAAG,CACdC,WAAW,CAAE,GADC,CAEdC,OAAO,CAAE,CACPC,OAAO,CAAE,CACPC,SAAS,CAAE,CACTV,KAAK,CAAE,eAAUW,OAAV,CAAmB,CACxB,GAAMX,CAAAA,KAAK,CAAGW,OAAO,CAACf,OAAR,CAAgBI,KAAhB,EAAyB,EAAvC,CAEAY,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAEA,GAAMG,CAAAA,QAAQ,WAAMd,KAAN,kBAAoBW,OAAO,CAACI,GAAR,CAAYxB,IAAhC,cAAyCoB,OAAO,CAACK,cAAjD,CAAd,CACA,MAAOF,CAAAA,QAAP,CACD,CARQ,CADJ,CADF,CAFK,CAgBdG,MAAM,CAAE,CACNC,CAAC,CAAE,CACDC,IAAI,CAAE,QADL,CADG,CAhBM,CAAhB,CAuBA,mBAAO,KAAC,IAAD,EAAM,GAAG,CAAE1B,GAAX,CAAgB,IAAI,CAAEG,OAAtB,CAA+B,OAAO,CAAEU,OAAxC,CAAiD,OAAO,CAAEZ,OAA1D,EAAP,CACD,CAvC2B,CAA5B,CAyCA,GAAM0B,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,WAAGrC,CAAAA,IAAH,OAAGA,IAAH,CAASsC,QAAT,OAASA,QAAT,oBACnB,MAAC,OAAD,yBACE,mCACE,KAAC,WAAD,IADF,cAEE,aAAM,SAAS,CAAC,aAAhB,0BAFF,GADF,cAKE,KAAC,SAAD,EAAW,GAAG,CAAEA,QAAhB,CAA0B,IAAI,CAAEtC,IAAhC,EALF,GADmB,EAArB,CAUA,cAAeqC,CAAAA,YAAf","sourcesContent":["import { forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport { FiGitBranch } from \"react-icons/fi\";\nimport { COLORS } from \"../utils/constants\";\nimport { Line } from \"react-chartjs-2\";\n\nconst Wrapper = styled.div`\n  max-width: 90%;\n  flex: 1;\n`;\n\nconst orderByTime = (data) =>\n  data.map(({ id, points }) => {\n    const sortedPoints = points.sort((a, b) => a.time - b.time);\n    return { id, points: sortedPoints };\n  });\n\nconst LineChart = forwardRef(({ data, onClick }, ref) => {\n  const orderedData = orderByTime(data);\n\n  const dataset = {\n    datasets: orderedData.map((path, index) => ({\n      label: `Position of ${path.id}`,\n      data: path.points,\n      fill: false,\n      backgroundColor: COLORS[index],\n      borderColor: COLORS[index],\n      pointStyle: \"circle\",\n      pointRadius: 6,\n    })),\n  };\n\n  const options = {\n    lineTension: 0.5,\n    plugins: {\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            const label = context.dataset.label || \"\";\n\n            console.log(context);\n\n            const newLabel = `${label} at T=${context.raw.time}: ${context.formattedValue}`;\n            return newLabel;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        type: \"linear\",\n      },\n    },\n  };\n\n  return <Line ref={ref} data={dataset} options={options} onClick={onClick} />;\n});\n\nconst Trajectories = ({ data, innerRef }) => (\n  <Wrapper>\n    <h2>\n      <FiGitBranch />\n      <span className=\"mobile-hide\">Trajectories</span>\n    </h2>\n    <LineChart ref={innerRef} data={data} />\n  </Wrapper>\n);\n\nexport default Trajectories;\n"]},"metadata":{},"sourceType":"module"}