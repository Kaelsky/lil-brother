{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelchimansky/Desktop/lil-brother/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport { Main, Spinner } from \"./Components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst importData = async () => import(\"./trajectoires.json\");\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #282c34;\n`;\n_c = Wrapper;\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    // Setting the data state asynchronously\n    // in case of huge dataset import\n    // we'll be able to display a loader\n    importData().then(({\n      default: def,\n      ...rest\n    }) => // setTimeout(() => setData(rest), 1000)\n    setData(rest));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: !data ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [/*#__PURE__*/_jsxDEV(FiEye, {\n          style: {\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), \"Lil Brother\", /*#__PURE__*/_jsxDEV(Spinner, {\n          inline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), Object.keys(data).length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), JSON.stringify(data)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/mickaelchimansky/Desktop/lil-brother/src/App.js"],"names":["useState","useEffect","styled","Main","Spinner","importData","Wrapper","div","App","data","setData","then","default","def","rest","marginRight","Object","keys","length","JSON","stringify"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,IAAT,EAAeC,OAAf,QAA8B,cAA9B;;;AAEA,MAAMC,UAAU,GAAG,YAAY,OAAO,qBAAP,CAA/B;;AAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAI;AAC3B;AACA;AACA;AACA,CAJA;KAAMD,O;;AAMN,SAASE,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACAI,IAAAA,UAAU,GAAGM,IAAb,CAAkB,CAAC;AAAEC,MAAAA,OAAO,EAAEC,GAAX;AAAgB,SAAGC;AAAnB,KAAD,KAChB;AACAJ,IAAAA,OAAO,CAACI,IAAD,CAFT;AAID,GARQ,EAQN,EARM,CAAT;AAUA,sBACE,QAAC,OAAD;AAAA,cACG,CAACL,IAAD,gBACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC,QAAC,IAAD;AAAA,8BACE,QAAC,KAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AAAEM,YAAAA,WAAW,EAAE;AAAf;AAAd;AAAA;AAAA;AAAA;AAAA,gBADF,8BAGE,QAAC,OAAD;AAAS,UAAA,MAAM;AAAf;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIGC,MAAM,CAACC,IAAP,CAAYR,IAAZ,EAAkBS,MAJrB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAQGC,IAAI,CAACC,SAAL,CAAeX,IAAf,CARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA/BQD,G;;MAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\n\nimport { Main, Spinner } from \"./Components\";\n\nconst importData = async () => import(\"./trajectoires.json\");\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: #282c34;\n`;\n\nfunction App() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    // Setting the data state asynchronously\n    // in case of huge dataset import\n    // we'll be able to display a loader\n    importData().then(({ default: def, ...rest }) =>\n      // setTimeout(() => setData(rest), 1000)\n      setData(rest)\n    );\n  }, []);\n\n  return (\n    <Wrapper>\n      {!data ? (\n        <Spinner />\n      ) : (\n        <Main>\n          <Title>\n            <FiEye style={{ marginRight: \"10px\" }} />\n            Lil Brother\n            <Spinner inline />\n            {Object.keys(data).length}\n          </Title>\n\n          {JSON.stringify(data)}\n        </Main>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}