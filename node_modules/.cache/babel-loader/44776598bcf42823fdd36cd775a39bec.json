{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelchimansky/Desktop/lil-brother/src/components/Trajectories.js\";\nimport { forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport { FiGitBranch } from \"react-icons/fi\";\nimport { COLORS } from \"../utils/constants\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  max-width: 90%;\n  flex: 1;\n`;\n_c = Wrapper;\n\nconst orderByTime = data => data.map(({\n  id,\n  points\n}) => {\n  const sortedPoints = points.sort((a, b) => a.time - b.time);\n  return {\n    id,\n    points: sortedPoints\n  };\n});\n\nconst LineChart = /*#__PURE__*/forwardRef(_c2 = ({\n  data,\n  onClick\n}, ref) => {\n  const orderedData = orderByTime(data);\n  const dataset = {\n    datasets: orderedData.map((path, index) => ({\n      label: `Position of ${path.id}`,\n      data: path.points,\n      fill: false,\n      backgroundColor: COLORS[index],\n      borderColor: COLORS[index],\n      pointStyle: \"circle\",\n      pointRadius: 6\n    }))\n  };\n  const options = {\n    lineTension: 0.5,\n    // plugins: {\n    //   tooltip: {\n    //     callbacks: {\n    //       label: function (context) {\n    //         const label = context.dataset.label || \"\";\n    //         console.log(context);\n    //         const newLabel = `${label} at T=${context.raw.time}: ${context.formattedValue}`;\n    //         return newLabel;\n    //       },\n    //     },\n    //   },\n    // },\n    scales: {\n      x: {\n        type: \"linear\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    ref: ref,\n    data: dataset,\n    options: options,\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n});\n_c3 = LineChart;\n\nconst Trajectories = ({\n  data,\n  innerRef\n}) => /*#__PURE__*/_jsxDEV(Wrapper, {\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: [/*#__PURE__*/_jsxDEV(FiGitBranch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"mobile-hide\",\n      children: \"Trajectories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n    ref: innerRef,\n    data: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 3\n}, this);\n\n_c4 = Trajectories;\nexport default Trajectories;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"LineChart$forwardRef\");\n$RefreshReg$(_c3, \"LineChart\");\n$RefreshReg$(_c4, \"Trajectories\");","map":{"version":3,"sources":["/Users/mickaelchimansky/Desktop/lil-brother/src/components/Trajectories.js"],"names":["forwardRef","styled","FiGitBranch","COLORS","Line","Wrapper","div","orderByTime","data","map","id","points","sortedPoints","sort","a","b","time","LineChart","onClick","ref","orderedData","dataset","datasets","path","index","label","fill","backgroundColor","borderColor","pointStyle","pointRadius","options","lineTension","scales","x","type","Trajectories","innerRef"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAI;AAC3B;AACA;AACA,CAHA;KAAMD,O;;AAKN,MAAME,WAAW,GAAIC,IAAD,IAClBA,IAAI,CAACC,GAAL,CAAS,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,KAAoB;AAC3B,QAAMC,YAAY,GAAGD,MAAM,CAACE,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAjC,CAArB;AACA,SAAO;AAAEN,IAAAA,EAAF;AAAMC,IAAAA,MAAM,EAAEC;AAAd,GAAP;AACD,CAHD,CADF;;AAMA,MAAMK,SAAS,gBAAGjB,UAAU,OAAC,CAAC;AAAEQ,EAAAA,IAAF;AAAQU,EAAAA;AAAR,CAAD,EAAoBC,GAApB,KAA4B;AACvD,QAAMC,WAAW,GAAGb,WAAW,CAACC,IAAD,CAA/B;AAEA,QAAMa,OAAO,GAAG;AACdC,IAAAA,QAAQ,EAAEF,WAAW,CAACX,GAAZ,CAAgB,CAACc,IAAD,EAAOC,KAAP,MAAkB;AAC1CC,MAAAA,KAAK,EAAG,eAAcF,IAAI,CAACb,EAAG,EADY;AAE1CF,MAAAA,IAAI,EAAEe,IAAI,CAACZ,MAF+B;AAG1Ce,MAAAA,IAAI,EAAE,KAHoC;AAI1CC,MAAAA,eAAe,EAAExB,MAAM,CAACqB,KAAD,CAJmB;AAK1CI,MAAAA,WAAW,EAAEzB,MAAM,CAACqB,KAAD,CALuB;AAM1CK,MAAAA,UAAU,EAAE,QAN8B;AAO1CC,MAAAA,WAAW,EAAE;AAP6B,KAAlB,CAAhB;AADI,GAAhB;AAYA,QAAMC,OAAO,GAAG;AACdC,IAAAA,WAAW,EAAE,GADC;AAEd;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,MAAM,EAAE;AACNC,MAAAA,CAAC,EAAE;AACDC,QAAAA,IAAI,EAAE;AADL;AADG;AAhBM,GAAhB;AAuBA,sBAAO,QAAC,IAAD;AAAM,IAAA,GAAG,EAAEhB,GAAX;AAAgB,IAAA,IAAI,EAAEE,OAAtB;AAA+B,IAAA,OAAO,EAAEU,OAAxC;AAAiD,IAAA,OAAO,EAAEb;AAA1D;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAvC2B,CAA5B;MAAMD,S;;AAyCN,MAAMmB,YAAY,GAAG,CAAC;AAAE5B,EAAAA,IAAF;AAAQ6B,EAAAA;AAAR,CAAD,kBACnB,QAAC,OAAD;AAAA,0BACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAKE,QAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,QAAhB;AAA0B,IAAA,IAAI,EAAE7B;AAAhC;AAAA;AAAA;AAAA;AAAA,UALF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;MAAM4B,Y;AAUN,eAAeA,YAAf","sourcesContent":["import { forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport { FiGitBranch } from \"react-icons/fi\";\nimport { COLORS } from \"../utils/constants\";\nimport { Line } from \"react-chartjs-2\";\n\nconst Wrapper = styled.div`\n  max-width: 90%;\n  flex: 1;\n`;\n\nconst orderByTime = (data) =>\n  data.map(({ id, points }) => {\n    const sortedPoints = points.sort((a, b) => a.time - b.time);\n    return { id, points: sortedPoints };\n  });\n\nconst LineChart = forwardRef(({ data, onClick }, ref) => {\n  const orderedData = orderByTime(data);\n\n  const dataset = {\n    datasets: orderedData.map((path, index) => ({\n      label: `Position of ${path.id}`,\n      data: path.points,\n      fill: false,\n      backgroundColor: COLORS[index],\n      borderColor: COLORS[index],\n      pointStyle: \"circle\",\n      pointRadius: 6,\n    })),\n  };\n\n  const options = {\n    lineTension: 0.5,\n    // plugins: {\n    //   tooltip: {\n    //     callbacks: {\n    //       label: function (context) {\n    //         const label = context.dataset.label || \"\";\n\n    //         console.log(context);\n\n    //         const newLabel = `${label} at T=${context.raw.time}: ${context.formattedValue}`;\n    //         return newLabel;\n    //       },\n    //     },\n    //   },\n    // },\n    scales: {\n      x: {\n        type: \"linear\",\n      },\n    },\n  };\n\n  return <Line ref={ref} data={dataset} options={options} onClick={onClick} />;\n});\n\nconst Trajectories = ({ data, innerRef }) => (\n  <Wrapper>\n    <h2>\n      <FiGitBranch />\n      <span className=\"mobile-hide\">Trajectories</span>\n    </h2>\n    <LineChart ref={innerRef} data={data} />\n  </Wrapper>\n);\n\nexport default Trajectories;\n"]},"metadata":{},"sourceType":"module"}