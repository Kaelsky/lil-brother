{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelchimansky/Desktop/lil-brother/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, forwardRef } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { FiEye } from \"react-icons/fi\";\nimport DataStatus from \"./DataStatus\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"#00b894\", \"#74b9ff\", \"#fdcb6e\", \"#6c5ce7\", \"#ff7675\"];\nconst blink = keyframes`\n  0% {}\n  1% { transform: scaleY(1); }\n  3% { transform: scaleY(0.2); }\n  5% { transform: scaleY(1); }\n  6% { transform: scaleY(1); }\n  8% { transform: scaleY(0.2); }\n  10% { transform: scaleY(1); }\n`;\nconst MainBase = styled.div`\n  padding: 2em;\n  color: snow;\n`;\n_c = MainBase;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n_c2 = Header;\nconst Title = styled.h1`\n  display: flex;\n  align-items: center;\n`;\n_c3 = Title;\nconst Logo = styled(FiEye)`\n  margin-right: 10px;\n  animation: ${blink} 5s infinite ease-in-out 2s;\n`;\n_c4 = Logo;\nconst Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n\n    border-radius: 6px;\n    background: rgba(0, 0, 0, 0.4);\n    padding: 1em;\n  }\n`;\n_c5 = Content;\nconst Persons = styled.div`\n  width: 10%;\n  margin-right: 2em;\n`;\n_c6 = Persons;\nconst Trajectories = styled.div`\n  width: 90%;\n`; // Sort data by time key\n\n_c7 = Trajectories;\n\nconst orderByTime = data => data.map(({\n  id,\n  points\n}) => {\n  const sortedPoints = points.sort((a, b) => a.time - b.time);\n  return {\n    id,\n    points: sortedPoints\n  };\n});\n\nconst LineChart = /*#__PURE__*/forwardRef(_c8 = ({\n  data,\n  onClick\n}, ref) => {\n  const orderedData = orderByTime(data);\n  const dataTest = {\n    datasets: orderedData.map((path, index) => ({\n      label: `Trajectory of ${path.id}`,\n      data: path.points,\n      fill: false,\n      backgroundColor: COLORS[index],\n      borderColor: COLORS[index]\n    }))\n  };\n  const options = {\n    lineTension: 0.5,\n    scales: {\n      x: {\n        type: \"linear\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    ref: ref,\n    data: dataTest,\n    options: options,\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, this);\n}); // function clickHandler(evt) {\n//   const points = myChart.getElementsAtEventForMode(\n//     evt,\n//     \"nearest\",\n//     { intersect: true },\n//     true\n//   );\n//   if (points.length) {\n//     const firstPoint = points[0];\n//     const label = myChart.data.labels[firstPoint.index];\n//     const value =\n//       myChart.data.datasets[firstPoint.datasetIndex].data[firstPoint.index];\n//   }\n// }\n\n_c9 = LineChart;\n\nconst Main = ({\n  data = []\n}) => {\n  _s();\n\n  const lineChartRef = useRef();\n\n  const resetTrajectories = () => data.forEach((_person, idx) => lineChartRef.current.show(idx));\n\n  const showTrajectory = index => {\n    data.forEach((_person, idx) => {\n      idx !== index ? lineChartRef.current.hide(idx) : lineChartRef.current.show(index);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainBase, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Lil Brother\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataStatus, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Persons, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Persons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetTrajectories,\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), data.map((person, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => showTrajectory(index),\n          children: person.id\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Trajectories, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Trajectories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n          ref: lineChartRef,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), JSON.stringify(data)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"kAxfKtT+qSKTWPZx56KZSeSsb+I=\");\n\n_c10 = Main;\nexport default Main;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"MainBase\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Logo\");\n$RefreshReg$(_c5, \"Content\");\n$RefreshReg$(_c6, \"Persons\");\n$RefreshReg$(_c7, \"Trajectories\");\n$RefreshReg$(_c8, \"LineChart$forwardRef\");\n$RefreshReg$(_c9, \"LineChart\");\n$RefreshReg$(_c10, \"Main\");","map":{"version":3,"sources":["/Users/mickaelchimansky/Desktop/lil-brother/src/components/Main.js"],"names":["useRef","forwardRef","styled","keyframes","FiEye","DataStatus","Line","COLORS","blink","MainBase","div","Header","Title","h1","Logo","Content","Persons","Trajectories","orderByTime","data","map","id","points","sortedPoints","sort","a","b","time","LineChart","onClick","ref","orderedData","dataTest","datasets","path","index","label","fill","backgroundColor","borderColor","options","lineTension","scales","x","type","Main","lineChartRef","resetTrajectories","forEach","_person","idx","current","show","showTrajectory","hide","person","JSON","stringify"],"mappings":"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","sourcesContent":["import { useRef, forwardRef } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { FiEye } from \"react-icons/fi\";\nimport DataStatus from \"./DataStatus\";\nimport { Line } from \"react-chartjs-2\";\n\nconst COLORS = [\"#00b894\", \"#74b9ff\", \"#fdcb6e\", \"#6c5ce7\", \"#ff7675\"];\n\nconst blink = keyframes`\n  0% {}\n  1% { transform: scaleY(1); }\n  3% { transform: scaleY(0.2); }\n  5% { transform: scaleY(1); }\n  6% { transform: scaleY(1); }\n  8% { transform: scaleY(0.2); }\n  10% { transform: scaleY(1); }\n`;\n\nconst MainBase = styled.div`\n  padding: 2em;\n  color: snow;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Title = styled.h1`\n  display: flex;\n  align-items: center;\n`;\n\nconst Logo = styled(FiEye)`\n  margin-right: 10px;\n  animation: ${blink} 5s infinite ease-in-out 2s;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n\n    border-radius: 6px;\n    background: rgba(0, 0, 0, 0.4);\n    padding: 1em;\n  }\n`;\n\nconst Persons = styled.div`\n  width: 10%;\n  margin-right: 2em;\n`;\n\nconst Trajectories = styled.div`\n  width: 90%;\n`;\n\n// Sort data by time key\nconst orderByTime = (data) =>\n  data.map(({ id, points }) => {\n    const sortedPoints = points.sort((a, b) => a.time - b.time);\n    return { id, points: sortedPoints };\n  });\n\nconst LineChart = forwardRef(({ data, onClick }, ref) => {\n  const orderedData = orderByTime(data);\n\n  const dataTest = {\n    datasets: orderedData.map((path, index) => ({\n      label: `Trajectory of ${path.id}`,\n      data: path.points,\n      fill: false,\n      backgroundColor: COLORS[index],\n      borderColor: COLORS[index],\n    })),\n  };\n\n  const options = {\n    lineTension: 0.5,\n    scales: {\n      x: {\n        type: \"linear\",\n      },\n    },\n  };\n\n  return <Line ref={ref} data={dataTest} options={options} onClick={onClick} />;\n});\n\n// function clickHandler(evt) {\n//   const points = myChart.getElementsAtEventForMode(\n//     evt,\n//     \"nearest\",\n//     { intersect: true },\n//     true\n//   );\n\n//   if (points.length) {\n//     const firstPoint = points[0];\n//     const label = myChart.data.labels[firstPoint.index];\n//     const value =\n//       myChart.data.datasets[firstPoint.datasetIndex].data[firstPoint.index];\n//   }\n// }\n\nconst Main = ({ data = [] }) => {\n  const lineChartRef = useRef();\n\n  const resetTrajectories = () =>\n    data.forEach((_person, idx) => lineChartRef.current.show(idx));\n\n  const showTrajectory = (index) => {\n    data.forEach((_person, idx) => {\n      idx !== index\n        ? lineChartRef.current.hide(idx)\n        : lineChartRef.current.show(index);\n    });\n  };\n\n  return (\n    <MainBase>\n      <Header>\n        <Title>\n          <Logo />\n          <span>Lil Brother</span>\n        </Title>\n        <DataStatus data={data} />\n      </Header>\n\n      <Content>\n        <Persons>\n          <h2>Persons</h2>\n\n          <button onClick={resetTrajectories}>All</button>\n          {data.map((person, index) => (\n            <button key={index} onClick={() => showTrajectory(index)}>\n              {person.id}\n            </button>\n          ))}\n        </Persons>\n        <Trajectories>\n          <h2>Trajectories</h2>\n          <LineChart ref={lineChartRef} data={data} />\n        </Trajectories>\n      </Content>\n\n      {JSON.stringify(data)}\n    </MainBase>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}