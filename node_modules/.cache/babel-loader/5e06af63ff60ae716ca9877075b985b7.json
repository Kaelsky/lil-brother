{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelchimansky/Desktop/lil-brother/src/components/Stats.js\";\nimport styled from \"styled-components\";\nimport { FiActivity, FiWatch, FiMapPin, FiChevronsRight, FiUser } from \"react-icons/fi\";\nimport { COLORS } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n_c = Wrapper;\nconst User = styled.div`\n  width: 100%;\n  text-align: center;\n  font-size: 1.4em;\n\n  & > span {\n    color: ${({\n  id\n}) => COLORS[id]};\n  }\n`;\n_c2 = User;\nconst StatsWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n`; // Get the edian value from an array\n\n_c3 = StatsWrapper;\n\nconst getMedian = values => {\n  values.sort((a, b) => a - b);\n  const half = Math.floor(values.length / 2);\n  if (values.length % 2) return values[half];\n  return (values[half - 1] + values[half]) / 2.0;\n};\n\nconst Stats = ({\n  data,\n  selectedId\n}) => {\n  const isDisabled = selectedId === null;\n\n  const getTrajectoryLength = () => {\n    var _data$selectedId;\n\n    const timeValues = (_data$selectedId = data[selectedId]) === null || _data$selectedId === void 0 ? void 0 : _data$selectedId.points.map(({\n      time\n    }) => time);\n    const diff = Math.max(...timeValues) - Math.min(...timeValues);\n    return diff;\n  };\n\n  const getMedianSpeed = () => {\n    var _data$selectedId2;\n\n    let timeValues = [];\n    let xValues = [];\n    let yValues = [];\n    (_data$selectedId2 = data[selectedId]) === null || _data$selectedId2 === void 0 ? void 0 : _data$selectedId2.points.forEach(({\n      time,\n      x,\n      y\n    }) => {\n      timeValues = [...timeValues, time];\n      xValues = [...xValues, x];\n      yValues = [...yValues, y];\n    });\n    const medianSpeed = getMedian(timeValues) / timeValues.length;\n    const medianX = getMedian(xValues) / xValues.length;\n    const medianY = getMedian(yValues) / yValues.length;\n    return parseFloat(medianX + medianY / medianSpeed).toPrecision(4);\n  };\n\n  const getStopNumber = () => {\n    var _data$selectedId3;\n\n    let stops = 0;\n    (_data$selectedId3 = data[selectedId]) === null || _data$selectedId3 === void 0 ? void 0 : _data$selectedId3.points.reduce((sum, acc) => {\n      if (acc.x === (sum === null || sum === void 0 ? void 0 : sum.x) || acc.y === (sum === null || sum === void 0 ? void 0 : sum.y)) stops++;\n      return sum;\n    });\n    return stops;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(FiActivity, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mobile-hide\",\n        children: \"Did you know ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), isDisabled ? \"Select a profile to know more about him\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(User, {\n        id: data[selectedId].id,\n        children: [\"About\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(FiUser, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), \" \", data[selectedId].id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StatsWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(FiWatch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), \"Total trajectory length: \", getTrajectoryLength(), \" s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(FiChevronsRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), \"Median speed: \", getMedianSpeed(), \" m/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(FiMapPin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), \"Number of stops: \", getStopNumber()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Stats;\nexport default Stats;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"User\");\n$RefreshReg$(_c3, \"StatsWrapper\");\n$RefreshReg$(_c4, \"Stats\");","map":{"version":3,"sources":["/Users/mickaelchimansky/Desktop/lil-brother/src/components/Stats.js"],"names":["styled","FiActivity","FiWatch","FiMapPin","FiChevronsRight","FiUser","COLORS","Wrapper","div","User","id","StatsWrapper","getMedian","values","sort","a","b","half","Math","floor","length","Stats","data","selectedId","isDisabled","getTrajectoryLength","timeValues","points","map","time","diff","max","min","getMedianSpeed","xValues","yValues","forEach","x","y","medianSpeed","medianX","medianY","parseFloat","toPrecision","getStopNumber","stops","reduce","sum","acc"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport {\n  FiActivity,\n  FiWatch,\n  FiMapPin,\n  FiChevronsRight,\n  FiUser,\n} from \"react-icons/fi\";\nimport { COLORS } from \"../utils/constants\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n\nconst User = styled.div`\n  width: 100%;\n  text-align: center;\n  font-size: 1.4em;\n\n  & > span {\n    color: ${({ id }) => COLORS[id]};\n  }\n`;\n\nconst StatsWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n\n// Get the edian value from an array\nconst getMedian = (values) => {\n  values.sort((a, b) => a - b);\n  const half = Math.floor(values.length / 2);\n  if (values.length % 2) return values[half];\n  return (values[half - 1] + values[half]) / 2.0;\n};\n\nconst Stats = ({ data, selectedId }) => {\n  const isDisabled = selectedId === null;\n\n  const getTrajectoryLength = () => {\n    const timeValues = data[selectedId]?.points.map(({ time }) => time);\n    const diff = Math.max(...timeValues) - Math.min(...timeValues);\n    return diff;\n  };\n\n  const getMedianSpeed = () => {\n    let timeValues = [];\n    let xValues = [];\n    let yValues = [];\n\n    data[selectedId]?.points.forEach(({ time, x, y }) => {\n      timeValues = [...timeValues, time];\n      xValues = [...xValues, x];\n      yValues = [...yValues, y];\n    });\n\n    const medianSpeed = getMedian(timeValues) / timeValues.length;\n    const medianX = getMedian(xValues) / xValues.length;\n    const medianY = getMedian(yValues) / yValues.length;\n\n    return parseFloat(medianX + medianY / medianSpeed).toPrecision(4);\n  };\n\n  const getStopNumber = () => {\n    let stops = 0;\n\n    data[selectedId]?.points.reduce((sum, acc) => {\n      if (acc.x === sum?.x || acc.y === sum?.y) stops++;\n      return sum;\n    });\n\n    return stops;\n  };\n\n  return (\n    <Wrapper>\n      <h2>\n        <FiActivity />\n        <span className=\"mobile-hide\">Did you know ?</span>\n      </h2>\n      {isDisabled ? (\n        \"Select a profile to know more about him\"\n      ) : (\n        <>\n          <User id={data[selectedId].id}>\n            About\n            <span>\n              <FiUser /> {data[selectedId].id}\n            </span>\n          </User>\n          <StatsWrapper>\n            <span>\n              <FiWatch />\n              Total trajectory length: {getTrajectoryLength()} s\n            </span>\n            <span>\n              <FiChevronsRight />\n              Median speed: {getMedianSpeed()} m/s\n            </span>\n            <span>\n              <FiMapPin />\n              Number of stops: {getStopNumber()}\n            </span>\n          </StatsWrapper>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Stats;\n"]},"metadata":{},"sourceType":"module"}