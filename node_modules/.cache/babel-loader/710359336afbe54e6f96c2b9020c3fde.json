{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelchimansky/Desktop/lil-brother/src/components/Main.js\";\nimport styled from \"styled-components\";\nimport { FiEye } from \"react-icons/fi\";\nimport DataStatus from \"./DataStatus\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"#55efc4\", \"#81ecec\", \"#74b9ff\", \"#a29bfe\", \"#fd79a8\"];\n\nconst calcCoordinates = data => data.sort((a, b) => a.time - b.time) // Sort data by time key\n.map(path => {\n  const timeValues = path.map(value => value.time);\n  var ratio = Math.max(...timeValues) / 100; // normalize to a 100 ratio\n\n  console.log(timeValues);\n  return {\n    x: point.x / ratio,\n    y: point.y / ratio\n  };\n});\n\nconst LineChart = ({\n  data\n}) => {\n  const dataTest = {\n    datasets: data.map((path, index) => ({\n      label: `Trajectory of ${path.id}`,\n      data: path.points,\n      fill: false,\n      backgroundColor: COLORS[index],\n      borderColor: COLORS[index]\n    }))\n  };\n  const options = {\n    lineTension: 0.5,\n    scales: {\n      x: {\n        type: \"linear\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: dataTest,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n\n_c = LineChart;\nconst MainBase = styled.div`\n  padding: 2em;\n  color: snow;\n`;\n_c2 = MainBase;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n_c3 = Header;\nconst Logo = styled.h1`\n  display: flex;\n  align-items: center;\n`;\n_c4 = Logo;\nconst Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n\n    border-radius: 6px;\n    background: rgba(0, 0, 0, 0.4);\n  }\n`;\n_c5 = Content;\nconst Persons = styled.div`\n  width: 10%;\n  margin-right: 2em;\n`;\n_c6 = Persons;\nconst Trajectories = styled.div`\n  width: 90%;\n`;\n_c7 = Trajectories;\n\nconst Main = ({\n  data = []\n}) => {\n  return /*#__PURE__*/_jsxDEV(MainBase, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        children: [/*#__PURE__*/_jsxDEV(FiEye, {\n          style: {\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Lil Brother\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataStatus, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Persons, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Persons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: \"none\"\n          },\n          children: data.map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: person.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Trajectories, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Trajectories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)), JSON.stringify(data)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_c8 = Main;\nexport default Main;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"LineChart\");\n$RefreshReg$(_c2, \"MainBase\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"Logo\");\n$RefreshReg$(_c5, \"Content\");\n$RefreshReg$(_c6, \"Persons\");\n$RefreshReg$(_c7, \"Trajectories\");\n$RefreshReg$(_c8, \"Main\");","map":{"version":3,"sources":["/Users/mickaelchimansky/Desktop/lil-brother/src/components/Main.js"],"names":["styled","FiEye","DataStatus","Line","COLORS","calcCoordinates","data","sort","a","b","time","map","path","timeValues","value","ratio","Math","max","console","log","x","point","y","LineChart","dataTest","datasets","index","label","id","points","fill","backgroundColor","borderColor","options","lineTension","scales","type","MainBase","div","Header","Logo","h1","Content","Persons","Trajectories","Main","marginRight","listStyle","person","item","JSON","stringify"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { FiEye } from \"react-icons/fi\";\nimport DataStatus from \"./DataStatus\";\nimport { Line } from \"react-chartjs-2\";\n\nconst COLORS = [\"#55efc4\", \"#81ecec\", \"#74b9ff\", \"#a29bfe\", \"#fd79a8\"];\n\nconst calcCoordinates = (data) =>\n  data\n    .sort((a, b) => a.time - b.time) // Sort data by time key\n    .map((path) => {\n      const timeValues = path.map((value) => value.time);\n      var ratio = Math.max(...timeValues) / 100; // normalize to a 100 ratio\n\n      console.log(timeValues);\n      return { x: point.x / ratio, y: point.y / ratio };\n    });\n\nconst LineChart = ({ data }) => {\n  const dataTest = {\n    datasets: data.map((path, index) => ({\n      label: `Trajectory of ${path.id}`,\n      data: path.points,\n      fill: false,\n      backgroundColor: COLORS[index],\n      borderColor: COLORS[index],\n    })),\n  };\n\n  const options = {\n    lineTension: 0.5,\n    scales: {\n      x: {\n        type: \"linear\",\n      },\n    },\n  };\n\n  return <Line data={dataTest} options={options} />;\n};\n\nconst MainBase = styled.div`\n  padding: 2em;\n  color: snow;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Logo = styled.h1`\n  display: flex;\n  align-items: center;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n\n    border-radius: 6px;\n    background: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst Persons = styled.div`\n  width: 10%;\n  margin-right: 2em;\n`;\n\nconst Trajectories = styled.div`\n  width: 90%;\n`;\n\nconst Main = ({ data = [] }) => {\n  return (\n    <MainBase>\n      <Header>\n        <Logo>\n          <FiEye style={{ marginRight: \"10px\" }} />\n          <span>Lil Brother</span>\n        </Logo>\n        <DataStatus data={data} />\n      </Header>\n\n      <Content>\n        <Persons>\n          <h2>Persons</h2>\n          <ul style={{ listStyle: \"none\" }}>\n            {data.map((person) => (\n              <li>\n                <button>{person.id}</button>\n              </li>\n            ))}\n          </ul>\n        </Persons>\n        <Trajectories>\n          <h2>Trajectories</h2>\n          <LineChart data={data} />\n        </Trajectories>\n      </Content>\n\n      {data.map((item) => (\n        <div>{item.id}</div>\n      ))}\n\n      {JSON.stringify(data)}\n    </MainBase>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}