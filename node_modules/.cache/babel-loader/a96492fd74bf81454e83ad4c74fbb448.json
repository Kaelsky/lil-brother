{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelchimansky/Desktop/lil-brother/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { FiEye } from \"react-icons/fi\";\nimport DataStatus from \"./DataStatus\"; // import { Line } from \"react-chartjs-2\";\n\nimport People from \"./People\";\nimport Trajectories from \"./Trajectories\"; // const COLORS = [\"#00b894\", \"#74b9ff\", \"#fdcb6e\", \"#6c5ce7\", \"#ff7675\"];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst blink = keyframes`\n  0% {}\n  1% { transform: scaleY(1); }\n  3% { transform: scaleY(0.2); }\n  5% { transform: scaleY(1); }\n  6% { transform: scaleY(1); }\n  8% { transform: scaleY(0.2); }\n  10% { transform: scaleY(1); }\n`;\nconst MainBase = styled.div`\n  padding: 2em;\n  color: snow;\n`;\n_c = MainBase;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n_c2 = Header;\nconst Title = styled.h1`\n  display: flex;\n  align-items: center;\n`;\n_c3 = Title;\nconst Logo = styled(FiEye)`\n  margin-right: 10px;\n  animation: ${blink} 5s infinite ease-in-out 2s;\n`;\n_c4 = Logo;\nconst Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n\n    border-radius: 6px;\n    background: rgba(0, 0, 0, 0.4);\n    padding: 1em;\n  }\n\n  & h2 {\n    display: flex;\n    align-items: center;\n    margin: 0;\n    margin-bottom: 1em;\n\n    & > svg {\n      margin-right: 6px;\n    }\n  }\n`; // const Trajectories = styled.div`\n//   width: 90%;\n// `;\n// Sort data by time key\n// const orderByTime = (data) =>\n//   data.map(({ id, points }) => {\n//     const sortedPoints = points.sort((a, b) => a.time - b.time);\n//     return { id, points: sortedPoints };\n//   });\n// const LineChart = forwardRef(({ data, onClick }, ref) => {\n//   const orderedData = orderByTime(data);\n//   const dataTest = {\n//     datasets: orderedData.map((path, index) => ({\n//       label: `Trajectory of ${path.id}`,\n//       data: path.points,\n//       fill: false,\n//       backgroundColor: COLORS[index],\n//       borderColor: COLORS[index],\n//     })),\n//   };\n//   const options = {\n//     lineTension: 0.5,\n//     scales: {\n//       x: {\n//         type: \"linear\",\n//       },\n//     },\n//   };\n//   return <Line ref={ref} data={dataTest} options={options} onClick={onClick} />;\n// });\n\n_c5 = Content;\n\nconst Main = ({\n  data = []\n}) => {\n  _s();\n\n  const lineChartRef = useRef();\n\n  const resetTrajectories = () => data.forEach((_person, idx) => lineChartRef.current.show(idx));\n\n  const showTrajectory = index => {\n    data.forEach((_person, idx) => {\n      idx !== index ? lineChartRef.current.hide(idx) : lineChartRef.current.show(index);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainBase, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Lil Brother\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataStatus, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(People, {\n        data: data,\n        onClick: showTrajectory,\n        onReset: resetTrajectories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Trajectories, {\n        ref: lineChartRef,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), JSON.stringify(data)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"kAxfKtT+qSKTWPZx56KZSeSsb+I=\");\n\n_c6 = Main;\nexport default Main;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"MainBase\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Logo\");\n$RefreshReg$(_c5, \"Content\");\n$RefreshReg$(_c6, \"Main\");","map":{"version":3,"sources":["/Users/mickaelchimansky/Desktop/lil-brother/src/components/Main.js"],"names":["useRef","styled","keyframes","FiEye","DataStatus","People","Trajectories","blink","MainBase","div","Header","Title","h1","Logo","Content","Main","data","lineChartRef","resetTrajectories","forEach","_person","idx","current","show","showTrajectory","index","hide","JSON","stringify"],"mappings":"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","sourcesContent":["import { useRef } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { FiEye } from \"react-icons/fi\";\nimport DataStatus from \"./DataStatus\";\n// import { Line } from \"react-chartjs-2\";\nimport People from \"./People\";\nimport Trajectories from \"./Trajectories\";\n\n// const COLORS = [\"#00b894\", \"#74b9ff\", \"#fdcb6e\", \"#6c5ce7\", \"#ff7675\"];\n\nconst blink = keyframes`\n  0% {}\n  1% { transform: scaleY(1); }\n  3% { transform: scaleY(0.2); }\n  5% { transform: scaleY(1); }\n  6% { transform: scaleY(1); }\n  8% { transform: scaleY(0.2); }\n  10% { transform: scaleY(1); }\n`;\n\nconst MainBase = styled.div`\n  padding: 2em;\n  color: snow;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Title = styled.h1`\n  display: flex;\n  align-items: center;\n`;\n\nconst Logo = styled(FiEye)`\n  margin-right: 10px;\n  animation: ${blink} 5s infinite ease-in-out 2s;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n\n    border-radius: 6px;\n    background: rgba(0, 0, 0, 0.4);\n    padding: 1em;\n  }\n\n  & h2 {\n    display: flex;\n    align-items: center;\n    margin: 0;\n    margin-bottom: 1em;\n\n    & > svg {\n      margin-right: 6px;\n    }\n  }\n`;\n\n// const Trajectories = styled.div`\n//   width: 90%;\n// `;\n\n// Sort data by time key\n// const orderByTime = (data) =>\n//   data.map(({ id, points }) => {\n//     const sortedPoints = points.sort((a, b) => a.time - b.time);\n//     return { id, points: sortedPoints };\n//   });\n\n// const LineChart = forwardRef(({ data, onClick }, ref) => {\n//   const orderedData = orderByTime(data);\n\n//   const dataTest = {\n//     datasets: orderedData.map((path, index) => ({\n//       label: `Trajectory of ${path.id}`,\n//       data: path.points,\n//       fill: false,\n//       backgroundColor: COLORS[index],\n//       borderColor: COLORS[index],\n//     })),\n//   };\n\n//   const options = {\n//     lineTension: 0.5,\n//     scales: {\n//       x: {\n//         type: \"linear\",\n//       },\n//     },\n//   };\n\n//   return <Line ref={ref} data={dataTest} options={options} onClick={onClick} />;\n// });\n\nconst Main = ({ data = [] }) => {\n  const lineChartRef = useRef();\n\n  const resetTrajectories = () =>\n    data.forEach((_person, idx) => lineChartRef.current.show(idx));\n\n  const showTrajectory = (index) => {\n    data.forEach((_person, idx) => {\n      idx !== index\n        ? lineChartRef.current.hide(idx)\n        : lineChartRef.current.show(index);\n    });\n  };\n\n  return (\n    <MainBase>\n      <Header>\n        <Title>\n          <Logo />\n          <span>Lil Brother</span>\n        </Title>\n        <DataStatus data={data} />\n      </Header>\n\n      <Content>\n        <People\n          data={data}\n          onClick={showTrajectory}\n          onReset={resetTrajectories}\n        />\n\n        <Trajectories ref={lineChartRef} data={data} />\n\n        {/* <Trajectories>\n          <h2>\n            <FiGitBranch />\n            Trajectories\n          </h2>\n          <LineChart ref={lineChartRef} data={data} />\n        </Trajectories> */}\n      </Content>\n\n      {JSON.stringify(data)}\n    </MainBase>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}