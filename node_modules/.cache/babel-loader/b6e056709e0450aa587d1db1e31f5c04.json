{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelchimansky/Desktop/lil-brother/src/components/Main.js\";\nimport styled from \"styled-components\";\nimport { FiEye } from \"react-icons/fi\";\nimport DataStatus from \"./DataStatus\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = [\"#55efc4\", \"#81ecec\", \"#74b9ff\", \"#a29bfe\", \"#fd79a8\"]; // Sort data by time key\n\nconst orderByTime = data => data.map(({\n  id,\n  points\n}) => {\n  const sortedPoints = points.sort((a, b) => a.time - b.time);\n  return {\n    id,\n    points: sortedPoints\n  };\n});\n\nconst calcCoordinates = data => {\n  const orderedData = orderByTime(data); // console.log(orderedData);\n\n  return orderedData.map(({\n    points\n  }) => {\n    // const timeValues = points.map((value) => value.time);\n    const timeValues = [...points.time];\n    console.log(\"timeValue\", timeValues);\n    var ratio = Math.max(...timeValues) / 100;\n    return {\n      x: points.x / ratio,\n      y: points.y / ratio\n    }; // normalize coordinates values with ratio\n  });\n};\n\nconst LineChart = ({\n  data\n}) => {\n  const coordinates = calcCoordinates(data);\n  console.log(coordinates);\n  const dataTest = {\n    datasets: data.map((path, index) => ({\n      label: `Trajectory of ${path.id}`,\n      data: path.points,\n      fill: false,\n      backgroundColor: COLORS[index],\n      borderColor: COLORS[index]\n    }))\n  };\n  const options = {\n    lineTension: 0.5,\n    scales: {\n      x: {\n        type: \"linear\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: dataTest,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n\n_c = LineChart;\nconst MainBase = styled.div`\n  padding: 2em;\n  color: snow;\n`;\n_c2 = MainBase;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n_c3 = Header;\nconst Logo = styled.h1`\n  display: flex;\n  align-items: center;\n`;\n_c4 = Logo;\nconst Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n\n    border-radius: 6px;\n    background: rgba(0, 0, 0, 0.4);\n  }\n`;\n_c5 = Content;\nconst Persons = styled.div`\n  width: 10%;\n  margin-right: 2em;\n`;\n_c6 = Persons;\nconst Trajectories = styled.div`\n  width: 90%;\n`;\n_c7 = Trajectories;\n\nconst Main = ({\n  data = []\n}) => {\n  return /*#__PURE__*/_jsxDEV(MainBase, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        children: [/*#__PURE__*/_jsxDEV(FiEye, {\n          style: {\n            marginRight: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Lil Brother\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataStatus, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Persons, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Persons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: \"none\"\n          },\n          children: data.map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: person.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Trajectories, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Trajectories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)), JSON.stringify(data)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_c8 = Main;\nexport default Main;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"LineChart\");\n$RefreshReg$(_c2, \"MainBase\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"Logo\");\n$RefreshReg$(_c5, \"Content\");\n$RefreshReg$(_c6, \"Persons\");\n$RefreshReg$(_c7, \"Trajectories\");\n$RefreshReg$(_c8, \"Main\");","map":{"version":3,"sources":["/Users/mickaelchimansky/Desktop/lil-brother/src/components/Main.js"],"names":["styled","FiEye","DataStatus","Line","COLORS","orderByTime","data","map","id","points","sortedPoints","sort","a","b","time","calcCoordinates","orderedData","timeValues","console","log","ratio","Math","max","x","y","LineChart","coordinates","dataTest","datasets","path","index","label","fill","backgroundColor","borderColor","options","lineTension","scales","type","MainBase","div","Header","Logo","h1","Content","Persons","Trajectories","Main","marginRight","listStyle","person","item","JSON","stringify"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { FiEye } from \"react-icons/fi\";\nimport DataStatus from \"./DataStatus\";\nimport { Line } from \"react-chartjs-2\";\n\nconst COLORS = [\"#55efc4\", \"#81ecec\", \"#74b9ff\", \"#a29bfe\", \"#fd79a8\"];\n\n// Sort data by time key\nconst orderByTime = (data) =>\n  data.map(({ id, points }) => {\n    const sortedPoints = points.sort((a, b) => a.time - b.time);\n    return { id, points: sortedPoints };\n  });\n\nconst calcCoordinates = (data) => {\n  const orderedData = orderByTime(data);\n  // console.log(orderedData);\n\n  return orderedData.map(({ points }) => {\n    // const timeValues = points.map((value) => value.time);\n    const timeValues = [...points.time];\n\n    console.log(\"timeValue\", timeValues);\n    var ratio = Math.max(...timeValues) / 100;\n    return { x: points.x / ratio, y: points.y / ratio }; // normalize coordinates values with ratio\n  });\n};\n\nconst LineChart = ({ data }) => {\n  const coordinates = calcCoordinates(data);\n  console.log(coordinates);\n\n  const dataTest = {\n    datasets: data.map((path, index) => ({\n      label: `Trajectory of ${path.id}`,\n      data: path.points,\n      fill: false,\n      backgroundColor: COLORS[index],\n      borderColor: COLORS[index],\n    })),\n  };\n\n  const options = {\n    lineTension: 0.5,\n    scales: {\n      x: {\n        type: \"linear\",\n      },\n    },\n  };\n\n  return <Line data={dataTest} options={options} />;\n};\n\nconst MainBase = styled.div`\n  padding: 2em;\n  color: snow;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Logo = styled.h1`\n  display: flex;\n  align-items: center;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n\n    border-radius: 6px;\n    background: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nconst Persons = styled.div`\n  width: 10%;\n  margin-right: 2em;\n`;\n\nconst Trajectories = styled.div`\n  width: 90%;\n`;\n\nconst Main = ({ data = [] }) => {\n  return (\n    <MainBase>\n      <Header>\n        <Logo>\n          <FiEye style={{ marginRight: \"10px\" }} />\n          <span>Lil Brother</span>\n        </Logo>\n        <DataStatus data={data} />\n      </Header>\n\n      <Content>\n        <Persons>\n          <h2>Persons</h2>\n          <ul style={{ listStyle: \"none\" }}>\n            {data.map((person) => (\n              <li>\n                <button>{person.id}</button>\n              </li>\n            ))}\n          </ul>\n        </Persons>\n        <Trajectories>\n          <h2>Trajectories</h2>\n          <LineChart data={data} />\n        </Trajectories>\n      </Content>\n\n      {data.map((item) => (\n        <div>{item.id}</div>\n      ))}\n\n      {JSON.stringify(data)}\n    </MainBase>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}