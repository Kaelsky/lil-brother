{"ast":null,"code":"var _jsxFileName = \"/Users/mickaelchimansky/Desktop/lil-brother/src/components/Stats.js\";\nimport styled from \"styled-components\";\nimport { FiActivity } from \"react-icons/fi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  flex: 1;\n  min-width: 100%;\n`; // Get median value from  an array\n\n_c = Wrapper;\n\nconst getMedian = values => {\n  values.sort((a, b) => a - b);\n  const half = Math.floor(values.length / 2);\n  if (values.length % 2) return values[half];\n  return (values[half - 1] + values[half]) / 2.0;\n}; // function sumDiff(arr) {\n//   return arr\n//     .slice(1)\n//     .map((n, i) => n - arr[i])\n//     .reduce((acc, sum) => acc + sum);\n// }\n\n\nconst Stats = ({\n  data,\n  selectedId\n}) => {\n  const isDisabled = selectedId === null;\n\n  const getTrajectoryLength = () => {\n    var _data$selectedId;\n\n    const timeValues = (_data$selectedId = data[selectedId]) === null || _data$selectedId === void 0 ? void 0 : _data$selectedId.points.map(({\n      time\n    }) => time);\n    const diff = Math.max(...timeValues) - Math.min(...timeValues);\n    return diff;\n  };\n\n  const getMedianSpeed = () => {\n    var _data$selectedId2;\n\n    let timeValues = [];\n    let xValues = [];\n    let yValues = [];\n    (_data$selectedId2 = data[selectedId]) === null || _data$selectedId2 === void 0 ? void 0 : _data$selectedId2.points.forEach(({\n      time,\n      x,\n      y\n    }) => {\n      timeValues = [...timeValues, time];\n      xValues = [...xValues, x];\n      yValues = [...yValues, y];\n    }); // const medianSpeed = getMedian(timeValues);\n    // const medianSpeed = sumDiff(timeValues) / timeValues.length;\n    // const medianX = sumDiff(xValues) / xValues.length;\n    // const medianY = sumDiff(yValues) / yValues.length;\n\n    const medianSpeed = getMedian(timeValues) / timeValues.length;\n    const medianX = getMedian(xValues) / xValues.length;\n    const medianY = getMedian(yValues) / yValues.length;\n    return JSON.stringify({\n      medianSpeed,\n      medianX,\n      medianY\n    });\n  }; //   function diff(A) {\n  //     return A.slice(1).map(function(n, i) {\n  //        return n - A[i];\n  //     })\n  //     }\n  //  console.log(diff(arr))\n  //  console.log(diff(arr).reduce((acc, sum) => acc + sum))\n\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(FiActivity, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mobile-hide\",\n        children: \"Did you know ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), isDisabled ? \"Select a profile to know more about him\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Dur\\xE9e du parcours: \", getTrajectoryLength(), \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Vitesse moyenne: \", getMedianSpeed()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Nombre d'arr\\xEAts:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Stats;\nexport default Stats;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Stats\");","map":{"version":3,"sources":["/Users/mickaelchimansky/Desktop/lil-brother/src/components/Stats.js"],"names":["styled","FiActivity","Wrapper","div","getMedian","values","sort","a","b","half","Math","floor","length","Stats","data","selectedId","isDisabled","getTrajectoryLength","timeValues","points","map","time","diff","max","min","getMedianSpeed","xValues","yValues","forEach","x","y","medianSpeed","medianX","medianY","JSON","stringify"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { FiActivity } from \"react-icons/fi\";\n\nconst Wrapper = styled.div`\n  flex: 1;\n  min-width: 100%;\n`;\n\n// Get median value from  an array\nconst getMedian = (values) => {\n  values.sort((a, b) => a - b);\n  const half = Math.floor(values.length / 2);\n  if (values.length % 2) return values[half];\n  return (values[half - 1] + values[half]) / 2.0;\n};\n\n// function sumDiff(arr) {\n//   return arr\n//     .slice(1)\n//     .map((n, i) => n - arr[i])\n//     .reduce((acc, sum) => acc + sum);\n// }\n\nconst Stats = ({ data, selectedId }) => {\n  const isDisabled = selectedId === null;\n\n  const getTrajectoryLength = () => {\n    const timeValues = data[selectedId]?.points.map(({ time }) => time);\n    const diff = Math.max(...timeValues) - Math.min(...timeValues);\n    return diff;\n  };\n\n  const getMedianSpeed = () => {\n    let timeValues = [];\n    let xValues = [];\n    let yValues = [];\n\n    data[selectedId]?.points.forEach(({ time, x, y }) => {\n      timeValues = [...timeValues, time];\n      xValues = [...xValues, x];\n      yValues = [...yValues, y];\n    });\n\n    // const medianSpeed = getMedian(timeValues);\n    // const medianSpeed = sumDiff(timeValues) / timeValues.length;\n    // const medianX = sumDiff(xValues) / xValues.length;\n    // const medianY = sumDiff(yValues) / yValues.length;\n    const medianSpeed = getMedian(timeValues) / timeValues.length;\n    const medianX = getMedian(xValues) / xValues.length;\n    const medianY = getMedian(yValues) / yValues.length;\n\n    return JSON.stringify({ medianSpeed, medianX, medianY });\n  };\n\n  //   function diff(A) {\n  //     return A.slice(1).map(function(n, i) {\n  //        return n - A[i];\n  //     })\n  //     }\n\n  //  console.log(diff(arr))\n  //  console.log(diff(arr).reduce((acc, sum) => acc + sum))\n\n  return (\n    <Wrapper>\n      <h2>\n        <FiActivity />\n        <span className=\"mobile-hide\">Did you know ?</span>\n      </h2>\n      {isDisabled ? (\n        \"Select a profile to know more about him\"\n      ) : (\n        <>\n          <span>Durée du parcours: {getTrajectoryLength()}s</span>\n          <span>Vitesse moyenne: {getMedianSpeed()}</span>\n          <span>Nombre d'arrêts:</span>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Stats;\n"]},"metadata":{},"sourceType":"module"}